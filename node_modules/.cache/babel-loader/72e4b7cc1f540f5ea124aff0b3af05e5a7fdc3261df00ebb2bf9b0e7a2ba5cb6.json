{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl, Select, MenuItem } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    const countries = data.map(country => ({\n      name: country.country,\n      value: country.countryInfo.iso2\n    }));\n    setCountries(data);\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"COVID 19 TRACKER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"app__dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        variant: \"outlined\",\n        value: countries,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"worldwide\",\n          children: \"Worldwide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 14\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: country.countryInfo.id,\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f9HHRLaH+kSbsZEzTKDgtEipR9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FormControl","Select","MenuItem","App","countryInfo","setCountryInfo","countries","setCountries","getCountries","response","fetch","data","json","map","country","name","value","iso2","console","log","id"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  FormControl,\n  Select,\n  MenuItem\n} from \"@mui/material\";\n\nfunction App() {\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] =useState<any[]>([]);\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    const countries = data.map((country: { country: any; countryInfo: { iso2: any; }; }) => ({\n      name: country.country,\n      value: country.countryInfo.iso2,\n    }));\n    setCountries(data);\n    console.log(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>COVID 19 TRACKER</h1>\n\n      <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" value={countries}>\n             {/* Loop through all the countries and dropdown */}\n             <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n              {countries.map((country: { countryInfo: { id: string | number | readonly string[] | undefined; }; country: string | number | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | React.ReactFragment | React.ReactPortal | null | undefined; }) =>(\n                  <MenuItem value={country.countryInfo.id}>{country.country}</MenuItem>\n                ))}\n              \n              {/* <MenuItem value=\"worldwide\">Worldwide 1</MenuItem>\n              <MenuItem value=\"worldwide\">Worldwide 2</MenuItem>\n              <MenuItem value=\"worldwide\">Worldwide 3</MenuItem>\n              <MenuItem value=\"worldwide\">Worldwide 4</MenuItem> */}\n            </Select>\n          </FormControl>\n\n      {/* Header */}\n\n      {/* Title + Dropdown */}\n\n      {/* InfoBoxes */}\n\n      {/* Tables */}\n\n      {/* Map */}\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,SACEC,WAAW,EACXC,MAAM,EACNC,QAAQ,QACH,eAAe;AAAC;AAEvB,SAASC,GAAG,GAAG;EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC;EAClD,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAER,QAAQ,CAAQ,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACdU,YAAY,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,YAAY,GAAG,YAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,CAAC;IACxE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IAClC,MAAMN,SAAS,GAAGK,IAAI,CAACE,GAAG,CAAEC,OAAuD,KAAM;MACvFC,IAAI,EAAED,OAAO,CAACA,OAAO;MACrBE,KAAK,EAAEF,OAAO,CAACV,WAAW,CAACa;IAC7B,CAAC,CAAC,CAAC;IACHV,YAAY,CAACI,IAAI,CAAC;IAClBO,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;EACnB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,UAAI;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAK,eAEzB,QAAC,WAAW;MAAC,SAAS,EAAC,eAAe;MAAA,uBAChC,QAAC,MAAM;QAAC,OAAO,EAAC,UAAU;QAAC,KAAK,EAAEL,SAAU;QAAA,wBAE3C,QAAC,QAAQ;UAAC,KAAK,EAAC,WAAW;UAAA,UAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAW,EAE9CA,SAAS,CAACO,GAAG,CAAEC,OAAyP,iBACrQ,QAAC,QAAQ;UAAC,KAAK,EAAEA,OAAO,CAACV,WAAW,CAACgB,EAAG;UAAA,UAAEN,OAAO,CAACA;QAAO;UAAA;UAAA;UAAA;QAAA,QAC1D,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAMG;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QAYd;AAEV;AAAC,GApDQX,GAAG;AAAA,KAAHA,GAAG;AAsDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}