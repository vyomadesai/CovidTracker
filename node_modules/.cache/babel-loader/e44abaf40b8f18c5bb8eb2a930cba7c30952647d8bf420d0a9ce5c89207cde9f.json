{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl, Select, Card, CardContent, MenuItem } from \"@mui/material\";\nimport InfoBox from './components/InfoBox';\n// import Map from './components/Map';\nimport Table from './components/Table';\nimport LineGraph from './components/LineGraph';\n// import { prettyPrintStat, sortData } from './util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState([\"worldwide\"]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCountries, setMapCountries] = useState([]);\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    setCountries(data);\n    console.log(data);\n  };\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setInputCountry(countryCode);\n      setCountryInfo(data);\n      console.log(data);\n      // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"COVID 19 TRACKER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"app__dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        variant: \"outlined\",\n        value: country,\n        onChange: onCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"worldwide\",\n          children: \"Worldwide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 14\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: country.countryInfo.iso2,\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__stats\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\"\n        // cases = \"123\"\n        ,\n        total: countryInfo.cases,\n        cases: countryInfo.todayCases\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\"\n        // cases = \"123\"\n        ,\n        total: countryInfo.recovered,\n        cases: countryInfo.todayRecovered\n        // cases={prettyPrintStat(countryInfo.todayCases)}\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\"\n        // cases = \"123\"\n        ,\n        total: countryInfo.deaths,\n        cases: countryInfo.todayDeaths\n        // cases={prettyPrintStat(countryInfo.todayCases)}\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: \"tableCla\",\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app__information\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Live Cases by Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"app__graphTittle\",\n            children: [\"World Wild New \", casesType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            className: \"app__graph\",\n            casesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AppYfmzk6VHMlxbQbNC6kz5QYuM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FormControl","Select","Card","CardContent","MenuItem","InfoBox","Table","LineGraph","App","countryInfo","setCountryInfo","countries","setCountries","country","setInputCountry","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","casesType","setCasesType","mapCountries","setMapCountries","fetch","then","response","json","data","getCountries","console","log","onCountryChange","e","countryCode","target","value","url","map","iso2","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths","tableData"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  FormControl,\n  Select,\n  Card,\n  CardContent,\n  MenuItem\n} from \"@mui/material\";\nimport InfoBox from './components/InfoBox';\n// import Map from './components/Map';\nimport Table from './components/Table';\nimport LineGraph from './components/LineGraph';\n// import { prettyPrintStat, sortData } from './util';\n\nfunction App() {\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] =useState<any[]>([]);\n  const [country, setInputCountry] =useState([\"worldwide\"]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapCountries, setMapCountries] = useState([]);\n  \n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    setCountries(data);\n    console.log(data);\n  }\n\n  const onCountryChange = async (e: { target: { value: any; }; }) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        console.log(data);\n        // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <h1>COVID 19 TRACKER</h1>\n\n      <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" \n            value={country}\n            onChange={onCountryChange}\n            >\n             {/* Loop through all the countries and dropdown */}\n             <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n             {countries.map((country) => (\n                <MenuItem value={country.countryInfo.iso2}>{country.country}</MenuItem>\n              ))}\n              </Select>\n          </FormControl>\n\n      {/* InfoBoxes */}\n              <div className='app__stats'>\n                {/* <InfoBox title=\"CoronaVirus\" cases=\"123\"  total=\"\" active=\"\" isRed=\"\" props/> */}\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  // cases = \"123\"\n                  total = {countryInfo.cases}\n                  cases = {countryInfo.todayCases}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  // cases = \"123\"\n                  total = {countryInfo.recovered}\n                  cases = {countryInfo.todayRecovered}\n                  // cases={prettyPrintStat(countryInfo.todayCases)}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  // cases = \"123\"\n                  total = {countryInfo.deaths}\n                  cases = {countryInfo.todayDeaths}\n                  // cases={prettyPrintStat(countryInfo.todayCases)}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n              </div>\n              {/* <Map\n                countries={mapCountries}\n                casesType={casesType}\n                center={mapCenter}\n                zoom={mapZoom}\n        /> */}\n    \n    <Card className=\"tableCla\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3 className='app__graphTittle'>World Wild New {casesType}</h3>\n            <LineGraph className=\"app__graph\" casesType={casesType} />\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}