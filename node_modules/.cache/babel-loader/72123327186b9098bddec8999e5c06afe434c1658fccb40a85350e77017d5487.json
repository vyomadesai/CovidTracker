{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/util.jsx\",\n  _this = this;\nimport React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#FF0000\",\n    multiplier: 200\n  },\n  recovered: {\n    hex: \"#00FF00\",\n    multiplier: 500\n  },\n  deaths: {\n    hex: \"#0000FF\",\n    multiplier: 900\n  }\n};\nexport const sortData = data => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\nexport const showDataOnMap = function (data) {\n  let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n  return data.map((country, i) => /*#__PURE__*/_jsxDEV(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.long],\n    pathOptions: {\n      color: casesTypeColors[casesType].hex,\n      fillColor: casesTypeColors[casesType].hex\n    }\n    // color={casesTypeColors[casesType].hex}\n    // fillColor={casesTypeColors[casesType].hex}\n    // fillOpacity={0.4}\n    ,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-flag\",\n          style: {\n            backgroundImage: `url(${country.countryInfo.flag})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-name\",\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-confirmed\",\n          children: [\"Cases: \", numeral(country.cases).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-recovered\",\n          children: [\"Recovered: \", numeral(country.recovered).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-deaths\",\n          children: [\"Deaths: \", numeral(country.deaths).format(\"0,0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, _this));\n};","map":{"version":3,"names":["React","numeral","Circle","Popup","casesTypeColors","cases","hex","multiplier","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","showDataOnMap","casesType","map","country","i","countryInfo","lat","long","color","fillColor","Math","sqrt","backgroundImage","flag"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/util.jsx"],"sourcesContent":["import React from \"react\";\nimport numeral from \"numeral\";\nimport { Circle, Popup } from \"react-leaflet\";\n\nconst casesTypeColors = {\n  cases: {\n    hex: \"#FF0000\",\n    multiplier: 200,\n  },\n  recovered: {\n    hex: \"#00FF00\",\n    multiplier: 500,\n  },\n  deaths: {\n    hex: \"#0000FF\",\n    multiplier: 900,\n  },\n};\n\nexport const sortData = (data) => {\n  let sortedData = [...data];\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n\nexport const prettyPrintStat = (stat) =>\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\n\nexport const showDataOnMap = (data, casesType = \"cases\") =>\n  data.map((country, i) => (\n    <Circle\n      key={i}\n      center={[country.countryInfo.lat, country.countryInfo.long]}\n      pathOptions={\n        {color: casesTypeColors[casesType].hex,\n        fillColor: casesTypeColors[casesType].hex }\n      }\n      // color={casesTypeColors[casesType].hex}\n      // fillColor={casesTypeColors[casesType].hex}\n      // fillOpacity={0.4}\n      radius={\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n      }\n    >\n      <Popup>\n        <div className=\"info-container\">\n          <div\n            className=\"info-flag\"\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\n          ></div>\n          <div className=\"info-name\">{country.country}</div>\n          <div className=\"info-confirmed\">\n            Cases: {numeral(country.cases).format(\"0,0\")}\n          </div>\n          <div className=\"info-recovered\">\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\n          </div>\n          <div className=\"info-deaths\">\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\n          </div>\n        </div>\n      </Popup>\n    </Circle>\n  ));\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AAAC;AAE9C,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE;IACLC,GAAG,EAAE,SAAS;IACdC,UAAU,EAAE;EACd,CAAC;EACDC,SAAS,EAAE;IACTF,GAAG,EAAE,SAAS;IACdC,UAAU,EAAE;EACd,CAAC;EACDE,MAAM,EAAE;IACNH,GAAG,EAAE,SAAS;IACdC,UAAU,EAAE;EACd;AACF,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAIC,IAAI,IAAK;EAChC,IAAIC,UAAU,GAAG,CAAC,GAAGD,IAAI,CAAC;EAC1BC,UAAU,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACxB,IAAID,CAAC,CAACT,KAAK,GAAGU,CAAC,CAACV,KAAK,EAAE;MACrB,OAAO,CAAC,CAAC;IACX,CAAC,MAAM;MACL,OAAO,CAAC;IACV;EACF,CAAC,CAAC;EACF,OAAOO,UAAU;AACnB,CAAC;AAED,OAAO,MAAMI,eAAe,GAAIC,IAAI,IAClCA,IAAI,GAAI,IAAGhB,OAAO,CAACgB,IAAI,CAAC,CAACC,MAAM,CAAC,MAAM,CAAE,EAAC,GAAG,IAAI;AAElD,OAAO,MAAMC,aAAa,GAAG,UAACR,IAAI;EAAA,IAAES,SAAS,uEAAG,OAAO;EAAA,OACrDT,IAAI,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,CAAC,kBAClB,QAAC,MAAM;IAEL,MAAM,EAAE,CAACD,OAAO,CAACE,WAAW,CAACC,GAAG,EAAEH,OAAO,CAACE,WAAW,CAACE,IAAI,CAAE;IAC5D,WAAW,EACT;MAACC,KAAK,EAAEvB,eAAe,CAACgB,SAAS,CAAC,CAACd,GAAG;MACtCsB,SAAS,EAAExB,eAAe,CAACgB,SAAS,CAAC,CAACd;IAAI;IAE5C;IACA;IACA;IAAA;IACA,MAAM,EACJuB,IAAI,CAACC,IAAI,CAACR,OAAO,CAACF,SAAS,CAAC,CAAC,GAAGhB,eAAe,CAACgB,SAAS,CAAC,CAACb,UAC5D;IAAA,uBAED,QAAC,KAAK;MAAA,uBACJ;QAAK,SAAS,EAAC,gBAAgB;QAAA,wBAC7B;UACE,SAAS,EAAC,WAAW;UACrB,KAAK,EAAE;YAAEwB,eAAe,EAAG,OAAMT,OAAO,CAACE,WAAW,CAACQ,IAAK;UAAG;QAAE;UAAA;UAAA;UAAA;QAAA,SAC1D,eACP;UAAK,SAAS,EAAC,WAAW;UAAA,UAAEV,OAAO,CAACA;QAAO;UAAA;UAAA;UAAA;QAAA,SAAO,eAClD;UAAK,SAAS,EAAC,gBAAgB;UAAA,WAAC,SACvB,EAACrB,OAAO,CAACqB,OAAO,CAACjB,KAAK,CAAC,CAACa,MAAM,CAAC,KAAK,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,SACxC,eACN;UAAK,SAAS,EAAC,gBAAgB;UAAA,WAAC,aACnB,EAACjB,OAAO,CAACqB,OAAO,CAACd,SAAS,CAAC,CAACU,MAAM,CAAC,KAAK,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,SAChD,eACN;UAAK,SAAS,EAAC,aAAa;UAAA,WAAC,UACnB,EAACjB,OAAO,CAACqB,OAAO,CAACb,MAAM,CAAC,CAACS,MAAM,CAAC,KAAK,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,SAC1C;MAAA;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACA,GA9BHK,CAAC;IAAA;IAAA;IAAA;EAAA,SAgCT,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}