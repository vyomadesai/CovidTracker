{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/components/LineGraph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js/auto';\nimport numeral from \"numeral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      type: \"time\",\n      time: {\n        format: \"MM/DD/YY\",\n        tooltipFormat: \"ll\"\n      }\n    }],\n    yAxes: [{\n      gridLines: {\n        display: false\n      },\n      ticks: {\n        // Include a dollar sign in the ticks\n        callback: function (value, index, values) {\n          return numeral(value).format(\"0a\");\n        }\n      }\n    }]\n  }\n};\nconst buildChargeData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\nfunction LineGraph(_ref) {\n  _s();\n  let {\n    casesType = 'cases',\n    ...props\n  } = _ref;\n  const [data, setData] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\").then(response => {\n        return response.json();\n      }).then(data => {\n        let chartData = buildChargeData(data, casesType);\n        setData(chartData);\n      });\n    };\n    fetchData();\n  }, [casesType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.className,\n    children: (data === null || data === void 0 ? void 0 : data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      },\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n_c = LineGraph;\nexport default LineGraph;\nvar _c;\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","numeral","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChargeData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","LineGraph","props","setData","fetchData","fetch","then","response","json","className","length","datasets","backgroundColor","borderColor"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/components/LineGraph.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Line } from 'react-chartjs-2'\nimport Chart from 'chart.js/auto';\nimport numeral from \"numeral\";\n\nconst options = {\n    legend: {\n        display: false,\n    },\n    elements: {\n        point: {\n            radius: 0,\n        },\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n        mode: \"index\",\n        intersect: false,\n        callbacks: {\n            label: function (tooltipItem, data) {\n                return numeral(tooltipItem.value).format(\"+0,0\");\n            },\n        },\n    },\n    scales: {\n        xAxes: [\n            {\n                type: \"time\",\n                time: {\n                    format: \"MM/DD/YY\",\n                    tooltipFormat: \"ll\",\n                },\n            },\n        ],\n        yAxes: [\n            {\n                gridLines: {\n                    display: false,\n                },\n                ticks: {\n                    // Include a dollar sign in the ticks\n                    callback: function (value, index, values) {\n                        return numeral(value).format(\"0a\");\n                    },\n                },\n            },\n        ],\n    },\n};\n\nconst buildChargeData = (data, casesType) => {\n  let chartData = [];\n  let lastDataPoint;\n  for (let date in data.cases) {\n    if (lastDataPoint) {\n      let newDataPoint = {\n        x: date,\n        y: data[casesType][date] - lastDataPoint,\n      };\n      chartData.push(newDataPoint);\n    }\n    lastDataPoint = data[casesType][date];\n  }\n  return chartData;\n};\n\nfunction LineGraph({ casesType = 'cases', ...props }) {\n\n    const [data, setData] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((response) => {\n          return response.json();\n        })\n        .then((data) => {\n          let chartData = buildChargeData(data, casesType);\n          setData(chartData);\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n    return (\n        <div className={props.className}>\n            {data?.length > 0 && (\n                <Line\n                    data={{\n                        datasets: [\n                            {\n                                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                                borderColor: \"#CC1034\",\n                                data: data,\n                            },\n                        ],\n                    }}\n                    options={options}\n                />\n            )}\n        </div>\n    )\n}\n\nexport default LineGraph"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}