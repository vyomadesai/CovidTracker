{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { FormControl, Select, MenuItem } from \"@mui/material\";\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] = useState([]);\n  const [country, setInputCountry] = useState([\"worldwide\"]);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    getCountries();\n  }, []);\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    setCountries(data);\n    console.log(data);\n  };\n  const onCountryChange = async e => {\n    const countryCode = e.target.value;\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setInputCountry(countryCode);\n      setCountryInfo(data);\n      console.log(data);\n      // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"COVID 19 TRACKER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: \"app__dropdown\",\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        variant: \"outlined\",\n        value: country,\n        onChange: onCountryChange,\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"worldwide\",\n          children: \"Worldwide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 14\n        }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: country.countryInfo.iso2,\n          children: country.country\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__stats\",\n      children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\",\n        cases: \"123\",\n        total: \"2343352\"\n        // cases={prettyPrintStat(countryInfo.todayCases)}\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\",\n        cases: \"123\",\n        total: \"2343352\"\n        // cases={prettyPrintStat(countryInfo.todayCases)}\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Coronavirus Cases\",\n        isRed: true,\n        active: casesType === \"cases\",\n        cases: \"123\",\n        total: \"2343352\"\n        // cases={prettyPrintStat(countryInfo.todayCases)}\n        // total={numeral(countryInfo.cases).format(\"0.0a\")}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Map, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c+ih0QNu4nGa5JdgbDq06lVtOrc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","FormControl","Select","MenuItem","InfoBox","Map","App","countryInfo","setCountryInfo","countries","setCountries","country","setInputCountry","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","casesType","setCasesType","getCountries","response","fetch","data","json","console","log","onCountryChange","e","countryCode","target","value","url","then","map","iso2"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport {\n  FormControl,\n  Select,\n  MenuItem\n} from \"@mui/material\";\nimport InfoBox from './components/InfoBox';\nimport Map from './components/Map';\nimport Table from './components/Table';\nimport LineGraph from './components/LineGraph';\nimport { prettyPrintStat, sortData } from './util';\n\nfunction App() {\n  // All state means how to write variables in react\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countries, setCountries] =useState<any[]>([]);\n  const [country, setInputCountry] =useState([\"worldwide\"]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    getCountries();\n  }, []);\n\n  const getCountries = async () => {\n    const response = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n    const data = await response.json();\n    setCountries(data);\n    console.log(data);\n  }\n\n  const onCountryChange = async (e: { target: { value: any; }; }) => {\n    const countryCode = e.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setInputCountry(countryCode);\n        setCountryInfo(data);\n        console.log(data);\n        // setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n  return (\n    <div className=\"App\">\n      <h1>COVID 19 TRACKER</h1>\n\n      <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" \n            value={country}\n            onChange={onCountryChange}\n            >\n             {/* Loop through all the countries and dropdown */}\n             <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n\n             {countries.map((country) => (\n                <MenuItem value={country.countryInfo.iso2}>{country.country}</MenuItem>\n              ))}\n              </Select>\n          </FormControl>\n\n      {/* InfoBoxes */}\n              <div className='app__stats'>\n                {/* <InfoBox title=\"CoronaVirus\" cases=\"123\"  total=\"\" active=\"\" isRed=\"\" props/> */}\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  cases = \"123\"\n                  total =\"2343352\"\n                  // cases={prettyPrintStat(countryInfo.todayCases)}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  cases = \"123\"\n                  total =\"2343352\"\n                  // cases={prettyPrintStat(countryInfo.todayCases)}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n                <InfoBox\n                  onClick={(e: any) => setCasesType(\"cases\")}\n                  title=\"Coronavirus Cases\"\n                  isRed\n                  active={casesType === \"cases\"}\n                  cases = \"123\"\n                  total =\"2343352\"\n                  // cases={prettyPrintStat(countryInfo.todayCases)}\n                  // total={numeral(countryInfo.cases).format(\"0.0a\")}\n                />\n              </div>\n              <Map />\n    \n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}