{"ast":null,"code":"var _jsxFileName = \"/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/components/Table.jsx\";\nimport React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TableS(_ref) {\n  let {\n    countries\n  } = _ref;\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"COUNTRIES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"POPULATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"TOTAL NO OF CASES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"ACTIVE CASES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"RECOVERED CASES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"DEATH CASES\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: countries.map((country, i) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: country.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: numeral(country.population).format(\"0,0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: numeral(country.cases).format(\"0,0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: numeral(country.active).format(\"0,0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: numeral(country.recovered).format(\"0,0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: numeral(country.deaths).format(\"0,0\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n// import React from 'react';\n// import numeral from \"numeral\";\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// // import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Paper from '@mui/material/Paper';\n\n// // function createData(\n// //   name: string,\n// //   calories: number,\n// //   fat: number,\n// //   carbs: number,\n// //   protein: number,\n// // ) {\n// //   return { name, calories, fat, carbs, protein };\n// // }\n\n// // const rows = [\n// //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n// //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n// //   createData('Eclair', 262, 16.0, 24, 6.0),\n// //   createData('Cupcake', 305, 3.7, 67, 4.3),\n// //   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// // ];\n\n// function TableS({countries}) {\n//   return (\n//     <TableContainer component={Paper} className=\"table\">\n//       <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n//         <TableBody>\n//         {countries.map((country, i) => (\n//             <TableRow\n//               key={i}\n//               sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//             >\n//               <TableCell component=\"th\" scope=\"row\">\n//                 {country.country}\n//               </TableCell>\n//               <TableCell align=\"right\">{numeral(country.cases).format(\"0,0\")}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// }\n_c = TableS;\nexport default TableS;\nvar _c;\n$RefreshReg$(_c, \"TableS\");","map":{"version":3,"names":["React","numeral","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TablePagination","TableS","countries","handleChangePage","event","newPage","setPage","handleChangeRowsPerPage","setRowsPerPage","target","value","map","country","i","population","format","cases","active","recovered","deaths"],"sources":["/Users/vyoma/Desktop/Desktop/webPage_frontend/ReactTutorial/ReactProjects/covidash/src/components/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./Table.css\";\nimport numeral from \"numeral\";\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport TablePagination from '@mui/material/TablePagination';\n\nfunction TableS({ countries }) {\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  \n  return (\n    <div className=\"table\">\n      <TableContainer>\n        <Table>\n        <TableHead>\n        <TableRow>\n            <TableCell align=\"center\">COUNTRIES</TableCell>\n            <TableCell align=\"center\">POPULATION</TableCell>\n            <TableCell align=\"center\">TOTAL NO OF CASES</TableCell>\n            <TableCell align=\"center\">ACTIVE CASES</TableCell>\n            <TableCell align=\"center\">RECOVERED CASES</TableCell>\n            <TableCell align=\"center\">DEATH CASES</TableCell>\n          </TableRow>\n        </TableHead>\n\n          <TableBody>\n          {countries.map((country, i) => (\n            <TableRow key={i}>\n              <TableCell align=\"center\">\n              {country.country}\n              </TableCell>\n              <TableCell align=\"center\">\n              {numeral(country.population).format(\"0,0\")}\n              </TableCell>\n              <TableCell align=\"center\">\n              {numeral(country.cases).format(\"0,0\")}\n              </TableCell>\n              <TableCell align=\"center\">\n              {numeral(country.active).format(\"0,0\")}\n              </TableCell>\n              <TableCell>\n              {numeral(country.recovered).format(\"0,0\")}\n              </TableCell>\n              <TableCell align=\"center\">\n              {numeral(country.deaths).format(\"0,0\")}\n              </TableCell>\n            </TableRow>\n             ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  );\n}\n\n// import React from 'react';\n// import numeral from \"numeral\";\n// import Table from '@mui/material/Table';\n// import TableBody from '@mui/material/TableBody';\n// import TableCell from '@mui/material/TableCell';\n// import TableContainer from '@mui/material/TableContainer';\n// // import TableHead from '@mui/material/TableHead';\n// import TableRow from '@mui/material/TableRow';\n// import Paper from '@mui/material/Paper';\n\n// // function createData(\n// //   name: string,\n// //   calories: number,\n// //   fat: number,\n// //   carbs: number,\n// //   protein: number,\n// // ) {\n// //   return { name, calories, fat, carbs, protein };\n// // }\n\n// // const rows = [\n// //   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n// //   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n// //   createData('Eclair', 262, 16.0, 24, 6.0),\n// //   createData('Cupcake', 305, 3.7, 67, 4.3),\n// //   createData('Gingerbread', 356, 16.0, 49, 3.9),\n// // ];\n\n// function TableS({countries}) {\n//   return (\n//     <TableContainer component={Paper} className=\"table\">\n//       <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n//         <TableBody>\n//         {countries.map((country, i) => (\n//             <TableRow\n//               key={i}\n//               sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n//             >\n//               <TableCell component=\"th\" scope=\"row\">\n//                 {country.country}\n//               </TableCell>\n//               <TableCell align=\"right\">{numeral(country.cases).format(\"0,0\")}</TableCell>\n//             </TableRow>\n//           ))}\n//         </TableBody>\n//       </Table>\n//     </TableContainer>\n//   );\n// }\n\nexport default TableS;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}